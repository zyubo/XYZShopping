//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("XYZShoppingModel", "FK_cart_products", "products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XYZShopping.product), "cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XYZShopping.cart), true)]
[assembly: EdmRelationshipAttribute("XYZShoppingModel", "FK_cart_users", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XYZShopping.user), "cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XYZShopping.cart), true)]
[assembly: EdmRelationshipAttribute("XYZShoppingModel", "FK_ordered_products", "products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XYZShopping.product), "ordered", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XYZShopping.ordered), true)]
[assembly: EdmRelationshipAttribute("XYZShoppingModel", "FK_ordered_users", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XYZShopping.user), "ordered", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XYZShopping.ordered), true)]

#endregion

namespace XYZShopping
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class XYZShoppingEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“XYZShoppingEntities”部分中的连接字符串初始化新 XYZShoppingEntities 对象。
        /// </summary>
        public XYZShoppingEntities() : base("name=XYZShoppingEntities", "XYZShoppingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 XYZShoppingEntities 对象。
        /// </summary>
        public XYZShoppingEntities(string connectionString) : base(connectionString, "XYZShoppingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 XYZShoppingEntities 对象。
        /// </summary>
        public XYZShoppingEntities(EntityConnection connection) : base(connection, "XYZShoppingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<cart> carts
        {
            get
            {
                if ((_carts == null))
                {
                    _carts = base.CreateObjectSet<cart>("carts");
                }
                return _carts;
            }
        }
        private ObjectSet<cart> _carts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ordered> ordereds
        {
            get
            {
                if ((_ordereds == null))
                {
                    _ordereds = base.CreateObjectSet<ordered>("ordereds");
                }
                return _ordereds;
            }
        }
        private ObjectSet<ordered> _ordereds;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<product> products
        {
            get
            {
                if ((_products == null))
                {
                    _products = base.CreateObjectSet<product>("products");
                }
                return _products;
            }
        }
        private ObjectSet<product> _products;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 carts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTocarts(cart cart)
        {
            base.AddObject("carts", cart);
        }
    
        /// <summary>
        /// 用于向 ordereds EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToordereds(ordered ordered)
        {
            base.AddObject("ordereds", ordered);
        }
    
        /// <summary>
        /// 用于向 products EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToproducts(product product)
        {
            base.AddObject("products", product);
        }
    
        /// <summary>
        /// 用于向 users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XYZShoppingModel", Name="cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cart : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 cart 对象。
        /// </summary>
        /// <param name="email">email 属性的初始值。</param>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="pcount">pcount 属性的初始值。</param>
        public static cart Createcart(global::System.String email, global::System.Int32 id, global::System.Int32 pcount)
        {
            cart cart = new cart();
            cart.email = email;
            cart.id = id;
            cart.pcount = pcount;
            return cart;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                if (_email != value)
                {
                    OnemailChanging(value);
                    ReportPropertyChanging("email");
                    _email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("email");
                    OnemailChanged();
                }
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pcount
        {
            get
            {
                return _pcount;
            }
            set
            {
                OnpcountChanging(value);
                ReportPropertyChanging("pcount");
                _pcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pcount");
                OnpcountChanged();
            }
        }
        private global::System.Int32 _pcount;
        partial void OnpcountChanging(global::System.Int32 value);
        partial void OnpcountChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_cart_products", "products")]
        public product product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("XYZShoppingModel.FK_cart_products", "products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("XYZShoppingModel.FK_cart_products", "products").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<product> productReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("XYZShoppingModel.FK_cart_products", "products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<product>("XYZShoppingModel.FK_cart_products", "products", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_cart_users", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("XYZShoppingModel.FK_cart_users", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("XYZShoppingModel.FK_cart_users", "users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("XYZShoppingModel.FK_cart_users", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("XYZShoppingModel.FK_cart_users", "users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XYZShoppingModel", Name="ordered")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ordered : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ordered 对象。
        /// </summary>
        /// <param name="email">email 属性的初始值。</param>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="pcount">pcount 属性的初始值。</param>
        /// <param name="orderid">orderid 属性的初始值。</param>
        /// <param name="address">address 属性的初始值。</param>
        /// <param name="delivered">delivered 属性的初始值。</param>
        /// <param name="cardnum">cardnum 属性的初始值。</param>
        /// <param name="arrive">arrive 属性的初始值。</param>
        /// <param name="total">total 属性的初始值。</param>
        public static ordered Createordered(global::System.String email, global::System.Int32 id, global::System.Int32 pcount, global::System.Int32 orderid, global::System.String address, global::System.Boolean delivered, global::System.Single cardnum, global::System.String arrive, global::System.Double total)
        {
            ordered ordered = new ordered();
            ordered.email = email;
            ordered.id = id;
            ordered.pcount = pcount;
            ordered.orderid = orderid;
            ordered.address = address;
            ordered.delivered = delivered;
            ordered.cardnum = cardnum;
            ordered.arrive = arrive;
            ordered.total = total;
            return ordered;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pcount
        {
            get
            {
                return _pcount;
            }
            set
            {
                OnpcountChanging(value);
                ReportPropertyChanging("pcount");
                _pcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pcount");
                OnpcountChanged();
            }
        }
        private global::System.Int32 _pcount;
        partial void OnpcountChanging(global::System.Int32 value);
        partial void OnpcountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderid
        {
            get
            {
                return _orderid;
            }
            set
            {
                if (_orderid != value)
                {
                    OnorderidChanging(value);
                    ReportPropertyChanging("orderid");
                    _orderid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("orderid");
                    OnorderidChanged();
                }
            }
        }
        private global::System.Int32 _orderid;
        partial void OnorderidChanging(global::System.Int32 value);
        partial void OnorderidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean delivered
        {
            get
            {
                return _delivered;
            }
            set
            {
                OndeliveredChanging(value);
                ReportPropertyChanging("delivered");
                _delivered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("delivered");
                OndeliveredChanged();
            }
        }
        private global::System.Boolean _delivered;
        partial void OndeliveredChanging(global::System.Boolean value);
        partial void OndeliveredChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single cardnum
        {
            get
            {
                return _cardnum;
            }
            set
            {
                OncardnumChanging(value);
                ReportPropertyChanging("cardnum");
                _cardnum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardnum");
                OncardnumChanged();
            }
        }
        private global::System.Single _cardnum;
        partial void OncardnumChanging(global::System.Single value);
        partial void OncardnumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String arrive
        {
            get
            {
                return _arrive;
            }
            set
            {
                OnarriveChanging(value);
                ReportPropertyChanging("arrive");
                _arrive = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("arrive");
                OnarriveChanged();
            }
        }
        private global::System.String _arrive;
        partial void OnarriveChanging(global::System.String value);
        partial void OnarriveChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private global::System.Double _total;
        partial void OntotalChanging(global::System.Double value);
        partial void OntotalChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_ordered_products", "products")]
        public product product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("XYZShoppingModel.FK_ordered_products", "products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("XYZShoppingModel.FK_ordered_products", "products").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<product> productReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("XYZShoppingModel.FK_ordered_products", "products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<product>("XYZShoppingModel.FK_ordered_products", "products", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_ordered_users", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("XYZShoppingModel.FK_ordered_users", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("XYZShoppingModel.FK_ordered_users", "users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("XYZShoppingModel.FK_ordered_users", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("XYZShoppingModel.FK_ordered_users", "users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XYZShoppingModel", Name="product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class product : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 product 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="title">title 属性的初始值。</param>
        /// <param name="available">available 属性的初始值。</param>
        /// <param name="price">price 属性的初始值。</param>
        /// <param name="image">image 属性的初始值。</param>
        /// <param name="summary">summary 属性的初始值。</param>
        /// <param name="details">details 属性的初始值。</param>
        public static product Createproduct(global::System.Int32 id, global::System.String title, global::System.Int32 available, global::System.Double price, global::System.String image, global::System.String summary, global::System.String details)
        {
            product product = new product();
            product.id = id;
            product.title = title;
            product.available = available;
            product.price = price;
            product.image = image;
            product.summary = summary;
            product.details = details;
            return product;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 available
        {
            get
            {
                return _available;
            }
            set
            {
                OnavailableChanging(value);
                ReportPropertyChanging("available");
                _available = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("available");
                OnavailableChanged();
            }
        }
        private global::System.Int32 _available;
        partial void OnavailableChanging(global::System.Int32 value);
        partial void OnavailableChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Double _price;
        partial void OnpriceChanging(global::System.Double value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String image
        {
            get
            {
                return _image;
            }
            set
            {
                OnimageChanging(value);
                ReportPropertyChanging("image");
                _image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("image");
                OnimageChanged();
            }
        }
        private global::System.String _image;
        partial void OnimageChanging(global::System.String value);
        partial void OnimageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String summary
        {
            get
            {
                return _summary;
            }
            set
            {
                OnsummaryChanging(value);
                ReportPropertyChanging("summary");
                _summary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("summary");
                OnsummaryChanged();
            }
        }
        private global::System.String _summary;
        partial void OnsummaryChanging(global::System.String value);
        partial void OnsummaryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String details
        {
            get
            {
                return _details;
            }
            set
            {
                OndetailsChanging(value);
                ReportPropertyChanging("details");
                _details = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("details");
                OndetailsChanged();
            }
        }
        private global::System.String _details;
        partial void OndetailsChanging(global::System.String value);
        partial void OndetailsChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_cart_products", "cart")]
        public EntityCollection<cart> carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cart>("XYZShoppingModel.FK_cart_products", "cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cart>("XYZShoppingModel.FK_cart_products", "cart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_ordered_products", "ordered")]
        public EntityCollection<ordered> ordereds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ordered>("XYZShoppingModel.FK_ordered_products", "ordered");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ordered>("XYZShoppingModel.FK_ordered_products", "ordered", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XYZShoppingModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 user 对象。
        /// </summary>
        /// <param name="username">username 属性的初始值。</param>
        /// <param name="email">email 属性的初始值。</param>
        /// <param name="password">password 属性的初始值。</param>
        public static user Createuser(global::System.String username, global::System.String email, global::System.String password)
        {
            user user = new user();
            user.username = username;
            user.email = email;
            user.password = password;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                if (_email != value)
                {
                    OnemailChanging(value);
                    ReportPropertyChanging("email");
                    _email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("email");
                    OnemailChanged();
                }
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_cart_users", "cart")]
        public EntityCollection<cart> carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cart>("XYZShoppingModel.FK_cart_users", "cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cart>("XYZShoppingModel.FK_cart_users", "cart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XYZShoppingModel", "FK_ordered_users", "ordered")]
        public EntityCollection<ordered> ordereds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ordered>("XYZShoppingModel.FK_ordered_users", "ordered");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ordered>("XYZShoppingModel.FK_ordered_users", "ordered", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
